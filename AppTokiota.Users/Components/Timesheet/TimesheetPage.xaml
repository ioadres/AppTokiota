<?xml version="1.0" encoding="UTF-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" 
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" 
    x:Class="AppTokiota.Users.Components.Timesheet.TimesheetPage"
    xmlns:prism="clr-namespace:Prism.Mvvm;assembly=Prism.Forms"
    prism:ViewModelLocator.AutowireViewModel="True"
    xmlns:converters="clr-namespace:AppTokiota.Users.Converters;assembly=AppTokiota.Users"
    xmlns:controls="clr-namespace:AppTokiota.Users.Controls;assembly=AppTokiota.Users"
    xmlns:controlsRefractored="clr-namespace:Refractored.XamForms.PullToRefresh;assembly=Refractored.XamForms.PullToRefresh"
    xmlns:xamanimation="clr-namespace:Xamanimation;assembly=Xamanimation"   
    xmlns:b="clr-namespace:Xamarin.Forms.BehaviorsPack;assembly=Xamarin.Forms.BehaviorsPack"
    xmlns:utils="clr-namespace:AppTokiota.Users.Utils;assembly=AppTokiota.Users"
    utils:NavigationBarAttachedProperty.BackgroundColor="{StaticResource RedColor}"
    utils:NavigationBarAttachedProperty.TextColor="{StaticResource WhiteColor}"        
    Title="{Binding Title}"
    >
    <ContentPage.Resources>
        <ResourceDictionary>
            <xamanimation:StoryBoard 
                x:Key="CalendarTranslationAnimation" 
                Target="{x:Reference Calendar}">
                <xamanimation:TranslateToAnimation 
                    TranslateY="0"
                    Easing="CubicOut" 
                    Duration="750" />
            </xamanimation:StoryBoard>

            <xamanimation:StoryBoard 
                x:Key="MultipleGridAnimation"    
                Target="{x:Reference MultipleGrid}">
                <xamanimation:FadeToAnimation  Opacity="0" Duration="0" />
                <xamanimation:TranslateToAnimation TranslateY="600" Duration="0" />
                <xamanimation:FadeToAnimation Opacity="1" Duration="150" />
                <xamanimation:TranslateToAnimation TranslateY="0" Easing="CubicOut" Duration="200" />
            </xamanimation:StoryBoard>
            
            <xamanimation:StoryBoard 
                x:Key="NotMultipleGridAnimation"    
                Target="{x:Reference NotMultipleGrid}">
                <xamanimation:FadeToAnimation  Opacity="0" Duration="0" />
                <xamanimation:TranslateToAnimation TranslateY="600" Duration="0" />
                <xamanimation:FadeToAnimation Opacity="1" Duration="150" />
                <xamanimation:TranslateToAnimation TranslateY="0" Easing="CubicOut" Duration="200" />
            </xamanimation:StoryBoard>

            <xamanimation:StoryBoard 
                x:Key="FooterAnimation"    
                Target="{x:Reference Footer}">
              <xamanimation:FadeToAnimation  Opacity="0" Duration="0" />
                <xamanimation:TranslateToAnimation TranslateY="600" Duration="0" />
                <xamanimation:FadeToAnimation Opacity="1" Duration="150" />
                <xamanimation:TranslateToAnimation TranslateY="0" Easing="CubicOut" Duration="200" />
            </xamanimation:StoryBoard>
            
            <Style x:Key="IconPlusTextStyle" TargetType="Label" BasedOn="{StaticResource PoppinsBoldLabelStyle}">
                <Setter Property="FontSize" Value="{StaticResource BigSize}" />
                <Setter Property="TextColor" Value="{StaticResource PrimaryTextColor}"/>
            </Style>

            <Style x:Key="ColorDescriptionTextStyle" TargetType="Label" BasedOn="{StaticResource PoppinsRegularLabelStyle}">
                <Setter Property="FontSize" Value="{StaticResource MediumSize}" />
                <Setter Property="TextColor" Value="{StaticResource SecondaryTextColor}"/>
            </Style>
            <Style x:Key="ColorBoxStyle" TargetType="BoxView">
                <Setter Property="WidthRequest" Value="5" />
                <Setter Property="HeightRequest" Value="2"/>
            </Style>
            <Style x:Key="ActionSelectedTextStyle" TargetType="Label" BasedOn="{StaticResource PoppinsRegularLabelStyle}">
                <Setter Property="FontSize" Value="{StaticResource MediumSize}" />
                <Setter Property="TextColor" Value="{StaticResource PrimaryTextColor}"/>
            </Style>
             <Style x:Key="FooterTextStyle" TargetType="Label" BasedOn="{StaticResource PoppinsRegularLabelStyle}">
                <Setter Property="FontSize" Value="{StaticResource LittleSize}" />
                <Setter Property="TextColor" Value="{StaticResource PrimaryTextColor}"/>
            </Style>

             <converters:MinutesToHourConverter x:Key="cnvMinutesToHour"></converters:MinutesToHourConverter>
            
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Triggers>
        <EventTrigger Event="Appearing">
            <xamanimation:BeginAnimation 
                Animation="{StaticResource CalendarTranslationAnimation}" />
        </EventTrigger>
    </ContentPage.Triggers>
    <ContentPage.Content>
         <controlsRefractored:PullToRefreshLayout
          IsPullToRefreshEnabled="True"
          RefreshCommand="{Binding ReloadDataCalendarCommand}"
          IsRefreshing="{Binding IsBusy}"
          RefreshColor="{StaticResource RedDarkColor}"> 
          <ScrollView
          HorizontalOptions="FillAndExpand"
          VerticalOptions="FillAndExpand">
                
        <Grid RowSpacing="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="9*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
                <StackLayout Grid.Row="0" Orientation="Horizontal" Margin="1" HorizontalOptions="Center" VerticalOptions="Center">
                    <StackLayout Orientation="Horizontal" Margin="1">
                        <BoxView BackgroundColor="{StaticResource BlueColor}" Style="{StaticResource ColorBoxStyle}"></BoxView>
                        <Label Text="Selected" Style="{StaticResource ColorDescriptionTextStyle}"></Label>
                    </StackLayout>
                    <StackLayout Orientation="Horizontal" Margin="1">
                        <BoxView BackgroundColor="{StaticResource GreenColor}" Style="{StaticResource ColorBoxStyle}"></BoxView>
                        <Label Text="Imputed" Style="{StaticResource ColorDescriptionTextStyle}"></Label>
                    </StackLayout>

                    <StackLayout Orientation="Horizontal">
                        <BoxView BackgroundColor="{StaticResource OrangeColor}" Style="{StaticResource ColorBoxStyle}"></BoxView>
                        <Label Text="Holidays" Style="{StaticResource ColorDescriptionTextStyle}"></Label>
                    </StackLayout>

                    <StackLayout Orientation="Horizontal">
                        <BoxView BackgroundColor="{StaticResource DarkGrayColor}" Style="{StaticResource ColorBoxStyle}"></BoxView>
                        <Label Text="Close" Style="{StaticResource ColorDescriptionTextStyle}"></Label>
                    </StackLayout>
                    
                </StackLayout>
            
                <Grid
                    Grid.Row="1">
                <controls:Calendar 
                        x:Name="Calendar"                    
                        TranslationY="350"
                        DateCommand="{Binding SelectedDateCommand}"
                        SelectedDates="{Binding Dates, Mode=TwoWay}"
                        SpecialDates="{Binding SpecialDates, Mode=TwoWay}"
                        MultiSelectDates="True" 
                        SelectRange="False"
                        StartDay="Monday" 
                        DatesFontSize="{StaticResource MidMediumSize }"
                        TitleLabelFontSize="{StaticResource MediumSize }"
                        EnableTitleMonthYearView="True"
                        WeekdaysShow="True"
                        WeekdaysFontSize="{StaticResource LittleSize }"
                        WeekdaysTextColor ="{StaticResource DarkColor}"
                        WeekdaysFontAttributes="Bold"

                        DisabledBorderColor="{StaticResource DarkGrayColor}"
                        DisabledBackgroundColor="{StaticResource DarkGrayColor}"
                        DisabledFontSize="{StaticResource LittleSize }"
                        DisabledBorderWidth="6"

                        DatesBackgroundColor="{StaticResource WhiteColor}"
                        TitleLeftArrowTextColor="{StaticResource DarkGrayColor}"
                        TitleRightArrowTextColor="{StaticResource DarkGrayColor}"
                  
                        SelectedFontSize="{StaticResource LittleSize }"
                        SelectedBorderWidth="1"
                        SelectedTextColor="{StaticResource DarkColor}"
                        SelectedBorderColor="{StaticResource BlueColor}"
                        SelectedBackgroundColor="{StaticResource BlueColor}"

                        BorderWidth="0"
                        BorderColor="{StaticResource DarkColor}"
                    
                        RightArrowCommand="{Binding DateChosen}"
                        LeftArrowCommand="{Binding DateChosen}"
                        MonthYearButtonCommand="{Binding DateChosen}"

                        HorizontalOptions="Center">
                </controls:Calendar>
                </Grid>

            <Grid 
                AutomationId="MultipleGrid"
                x:Name="MultipleGrid"
                Grid.Row="2"
                IsVisible="{Binding IsMultiple}"
                BackgroundColor="{StaticResource RedColor}"
                Padding="20"
                >
                     <Grid.Triggers>
                    <Trigger TargetType="Grid" Property="Grid.IsVisible" Value="True">
                        <Trigger.EnterActions>
                            <xamanimation:BeginAnimation
                                Animation="{StaticResource MultipleGridAnimation}" />
                        </Trigger.EnterActions>
                    </Trigger>
                </Grid.Triggers>
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer 
                            Command="{Binding ManageMultipleImputedDayCommand}" />
                    </Grid.GestureRecognizers>
                    
                     <StackLayout Orientation="Horizontal" HorizontalOptions="Center" VerticalOptions="Center">
                        <controls:AwesomeLabelControl Text="&#xf0fe;" Style="{StaticResource IconPlusTextStyle}"/>
                        <Label TranslationX="2" Text="Imputed a multiple selected day" Style="{StaticResource ActionSelectedTextStyle}"></Label>
                    </StackLayout>
            </Grid>
            <Grid 
                AutomationId="NotMultipleGrid"
                x:Name="NotMultipleGrid"
                Grid.Row="2"
                IsVisible="{Binding IsNotMultiple}"
                BackgroundColor="{StaticResource GreenColor}" 
                Padding="20"
                >
                <Grid.Triggers>
                    <Trigger TargetType="Grid" Property="Grid.IsVisible" Value="True">
                        <Trigger.EnterActions>
                            <xamanimation:BeginAnimation
                                Animation="{StaticResource NotMultipleGridAnimation}" />
                        </Trigger.EnterActions>
                    </Trigger>
                </Grid.Triggers>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer 
                        Command="{Binding ManageImputedDayCommand}" />
                </Grid.GestureRecognizers>
                    
                <StackLayout Orientation="Horizontal" HorizontalOptions="Center" VerticalOptions="Center">
                    <controls:AwesomeLabelControl Text="&#xf0fe;" Style="{StaticResource IconPlusTextStyle}"/>
                    <Label TranslationX="2" Text=" Info selected day" Style="{StaticResource ActionSelectedTextStyle}"></Label>
                </StackLayout>
            </Grid>

            <Grid Grid.Row="2" 
                  x:Name="Footer"
                  AutomationId="Footer"
                  BackgroundColor="{StaticResource DarkColor}"
                  IsVisible="{Binding IsVisibleFooter}" >
                <Grid.Triggers>
                    <Trigger TargetType="Grid" Property="Grid.IsVisible" Value="True">
                        <Trigger.EnterActions>
                            <xamanimation:BeginAnimation
                                Animation="{StaticResource FooterAnimation}" />
                        </Trigger.EnterActions>
                    </Trigger>
                </Grid.Triggers>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackLayout Grid.Column="0" Padding="10" >
                    <Label Text="Imputed" Style="{StaticResource FooterTextStyle}" />
                    <Label Text="Deviation" Style="{StaticResource FooterTextStyle}"/>
                </StackLayout>
                <StackLayout Grid.Column="1" Padding="10">
                    <Label Text="{Binding ImputedTotal, Converter={StaticResource cnvMinutesToHour}}" Style="{StaticResource FooterTextStyle}"/>
                    <Label Text="{Binding DeviationTotal, Converter={StaticResource cnvMinutesToHour}}" Style="{StaticResource FooterTextStyle}"/>
                </StackLayout>
           </Grid>
                
        </Grid>
       </ScrollView>
   </controlsRefractored:PullToRefreshLayout>
    </ContentPage.Content>
</ContentPage>
